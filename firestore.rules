rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Controls access to user profile documents.
     * @path /users/{userId}
     * @allow (create) User with matching UID can create their profile.
     * @allow (get) User with matching UID can read their profile.
     * @allow (update) User with matching UID can update their profile.
     * @allow (delete) User with matching UID can delete their profile.
     * @deny (create) User cannot create a profile with a different UID.
     * @deny (update) User cannot update someone else's profile.
     * @deny (delete) User cannot delete someone else's profile.
     * @principle Enforces document ownership for user profiles.
     */
    match /users/{userId} {
      allow get: if isOwner(userId);
      allow list: if false;
      allow create: if isSignedIn() && request.auth.uid == userId;
      allow update: if isOwner(userId);
      allow delete: if isOwner(userId);
    }

    /**
     * @description Controls access to task documents within a user's profile.
     * @path /users/{userId}/tasks/{taskId}
     * @allow (create) User with matching UID can create tasks under their profile.
     * @allow (get) User with matching UID can read tasks under their profile.
     * @allow (update) User with matching UID can update tasks under their profile.
     * @allow (delete) User with matching UID can delete tasks under their profile.
     * @deny (create) User cannot create tasks under someone else's profile.
     * @deny (update) User cannot update someone else's profile's tasks.
     * @deny (delete) User cannot delete someone else's profile's tasks.
     * @principle Enforces strict user ownership for tasks.
     */
    match /users/{userId}/tasks/{taskId} {
      allow get: if isOwner(userId);
      allow list: if false;
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
      allow delete: if isOwner(userId);
    }

    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
  }
}